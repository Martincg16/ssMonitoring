# Solar Monitoring Environment Variables
# Copy this file to .env and fill in your actual values
# WARNING: Never commit the .env file to git!

# =============================================================================
# TERRAFORM VARIABLES (for AWS infrastructure deployment)
# =============================================================================
TF_VAR_db_password=password

# =============================================================================
# DJANGO APPLICATION SETTINGS
# =============================================================================

# Django Core Settings
DEBUG=False
SECRET_KEY=django-insecure-change-this-to-a-real-secret-key-in-production

# Django Security (for production)
ALLOWED_HOSTS=*

# Database Configuration
# For local development (before deploying to AWS):
# DB_HOST=localhost
# For AWS (after terraform deployment):
DB_HOST=ss-monitoring-db.cub240qeyxgi.us-east-1.rds.amazonaws.com
DB_PORT=5432
DB_NAME=ssmonitoring
DB_USER=postgres
DB_PASSWORD=password

# =============================================================================
# IMPORTANT NOTES
# =============================================================================
# 1. DB_PASSWORD must match TF_VAR_db_password above
# 2. After running terraform apply, update DB_HOST with the actual RDS endpoint
# 3. Generate a proper SECRET_KEY for production:
#    python -c "from django.core.management.utils import get_random_secret_key; print(get_random_secret_key())"
# 4. For local development, set DB_HOST=localhost if running local PostgreSQL 

# =============================================================================
# EMAIL ALERT CONFIGURATION (AWS SES)
# =============================================================================
# EASIEST: Use Gmail with App Password (5-minute setup)
# 1. Enable 2FA on your Gmail account
# 2. Generate App Password: Google Account > Security > App passwords
# 3. Use your Gmail address and the generated app password below

# EMAIL CHOICE: Using Gmail (not AWS SES)
# Your Gmail credentials for sending emails
AWS_SES_SMTP_USER=martin@rocasol.com.co
AWS_SES_SMTP_PASSWORD=khna dkqn rlty qtmu

# Email Alert Settings
# FROM email (your Gmail address)
ALERT_FROM_EMAIL=martin@rocasol.com.co

# TO emails (who receives the alerts - comma separated)  
ALERT_EMAIL_RECIPIENTS=martin@rocasol.com.co

# FORCE_GMAIL_SMTP=true will override the @gmail.com detection
FORCE_GMAIL_SMTP=true

# =============================================================================
# API CREDENTIALS (if needed for specific systems)
# =============================================================================
# Add any additional API keys or credentials here